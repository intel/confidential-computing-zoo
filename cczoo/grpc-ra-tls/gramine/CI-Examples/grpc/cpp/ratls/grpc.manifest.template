#
# Copyright (c) 2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

libos.entrypoint = "{{ entrypoint }}"
# libos.check_invalid_pointers = false

loader.entrypoint = "file:{{ gramine.libos }}"
loader.log_level = "{{ log_level }}"
# loader.log_file = ""

loader.insecure__use_cmdline_argv = true
loader.insecure__use_host_env = true

loader.env.LD_LIBRARY_PATH = "/usr/local{{ arch_libdir }}:/usr{{ arch_libdir }}:/lib:{{ arch_libdir }}"
loader.env.HOME = "{{ env.HOME }}"
loader.env.LC_ALL = "C"
loader.env.GRPC_VERBOSITY = "ERROR"

loader.pal_internal_mem_size = "128M"

sys.enable_sigterm_injection = true
sys.stack.size = "16M"

fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
  { path = "/usr", uri = "file:/usr" },
  { path = "/etc", uri = "file:/etc" },
  { type = "tmpfs", path = "/tmp" },
]

sgx.debug = false
sgx.remote_attestation = "dcap"
sgx.nonpie_binary = true
sgx.enable_stats = false
sgx.enclave_size = "2G"
sgx.insecure__rpc_thread_num = 0
sgx.max_threads = {{ '1' if env.get('EDMM', '0') == '1' else '16' }}
sgx.edmm_enable = {{ 'true' if env.get('EDMM', '0') == '1' else 'false' }}

# sgx.require_avx = true
# sgx.require_avx512 = true
# sgx.require_amx = true

sgx.trusted_files = [
  "file:{{ entrypoint }}",
  "file:{{ gramine.libos }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr{{ arch_libdir }}/",
  "file:/usr/local{{ arch_libdir }}/",
  "file:/etc/ssl/certs/ca-certificates.crt",
  "file:/etc/default/apport",
  "file:/etc/mime.types",
]

sgx.allowed_files = [
  "file:/usr/lib/ssl/openssl.cnf",
  "file:/etc/ld.so.conf",
  "file:/etc/gai.conf",
  "file:/etc/host.conf",
  "file:/etc/resolv.conf",
  "file:/etc/nsswitch.conf",
  "file:/etc/sgx_default_qcnl.conf",
  "file:/etc/hosts",
  "file:/etc/group",
  "file:/etc/passwd",
  "file:dynamic_config.json",
]
