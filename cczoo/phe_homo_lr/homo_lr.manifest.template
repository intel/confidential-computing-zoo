# homo_lr manifest

loader.preload = "file:{{ gramine.libos }}" # for compatibility with v1.0

loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ entrypoint }}"

loader.log_level = "error"

loader.env.LD_LIBRARY_PATH = "{{ python.stdlib }}/lib:/lib:{{ arch_libdir }}:/usr/lib:/usr/{{ arch_libdir }}:./"
loader.env.PYTHONPATH = { passthrough = true }

loader.insecure__use_cmdline_argv = true

loader.pal_internal_mem_size = "200M"

sys.enable_sigterm_injection = true

fs.mounts = [
  {type = "chroot", uri = "file:{{ gramine.runtimedir() }}", path = "/lib"},
  {type = "chroot", uri = "file:{{ arch_libdir }}", path = "{{ arch_libdir }}"},
  {type = "chroot", uri = "file:/usr", path ="/usr"},
  {type = "chroot", uri = "file:{{ python.stdlib }}", path ="{{ python.stdlib }}"},
  {type = "chroot", uri = "file:{{ python.distlib}}", path ="{{ python.distlib}}"},
  {type = "chroot", uri = "file:/tmp", path ="/tmp"},
  {type = "chroot", uri = "file:/etc", path ="/etc"},
  {type = "chroot", uri = "file:/homo_lr", path ="/root/confidential-computing-zoo/cczoo/phe_homo_lr"}
  {type = "chroot", uri = "file:/key", path ="/key"}
]

# fs.mount.lib.type = "chroot"
# fs.mount.lib.path = "/lib"
# fs.mount.lib.uri = "file:{{ gramine.runtimedir() }}"

# fs.mount.lib2.type = "chroot"
# fs.mount.lib2.path = "{{ arch_libdir }}"
# fs.mount.lib2.uri = "file:{{ arch_libdir }}"

# fs.mount.usr.type = "chroot"
# fs.mount.usr.path = "/usr"
# fs.mount.usr.uri = "file:/usr"

# fs.mount.pyhome.type = "chroot"
# fs.mount.pyhome.path = "{{ python.stdlib }}"
# fs.mount.pyhome.uri = "file:{{ python.stdlib }}"

# fs.mount.pydisthome.type = "chroot"
# fs.mount.pydisthome.path = "{{ python.distlib }}"
# fs.mount.pydisthome.uri = "file:{{ python.distlib }}"

# fs.mount.tmp.type = "chroot"
# fs.mount.tmp.path = "/tmp"
# fs.mount.tmp.uri = "file:/tmp"

# fs.mount.etc.type = "chroot"
# fs.mount.etc.path = "/etc"
# fs.mount.etc.uri = "file:/etc"

# fs.mount.homo_lr.type = "chroot"
# fs.mount.homo_lr.path = "/homo_lr"
# fs.mount.homo_lr.uri = "file:/homo_lr"

sgx.debug = true
sgx.nonpie_binary = true
sgx.enclave_size = "8G"
sys.stack.size = "8M"
sgx.thread_num = 480

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ entrypoint }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/",
  "file:{{ python.stdlib }}/",
  "file:{{ python.distlib }}/",
  "file:/etc/mime.types",
  "file:homo_lr_ps.py",
  "file:homo_lr_worker.py",
  "file:homo_lr_pb2.py",
  "file:homo_lr_pb2_grpc.py",
  "file:breast_homo_test.csv",
  "file:breast_homo_guest.csv",
  "file:breast_homo_host.csv",
  "file:/homo_lr/ipcl-python/",
  "file:hetero_attestation_pb2.py",
  "file:hetero_attestation_pb2_grpc.py",
  "file:attestation.py",
  "file:homo_lr_common.py",
  "file:ps.json",
  "file:worker_1.json",
  "file:worker_2.json",
]

sgx.allowed_files = [
  "file:/etc/nsswitch.conf",
  "file:/etc/ethers",
  "file:/etc/hosts",
  "file:/etc/group",
  "file:/etc/passwd",
  "file:/etc/gai.conf",
  "file:/etc/host.conf",
  "file:/etc/resolv.conf",
  "file:/tmp",
  "file:/usr/local/lib/python3.8/",
  "file:/usr/lib/python3.8/",
  "file:/key/"
]
